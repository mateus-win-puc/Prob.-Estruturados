import java.util.Scanner;
public class Main {
  public static void main(String args[]) {
     //----------------------------PILHA-----------------------------------//
    Minha_pilha pilha = new Minha_pilha();
    Solicitacao[] solicitacoes = {
        new Solicitacao("REQ001", "Instalação de software", "2024-08-20 10:30"),
        new Solicitacao("REQ002", "Manutenção preventiva", "2024-08-20 11:00"),
        new Solicitacao("REQ003", "Atualização de sistema", "2024-08-20 11:30"),
        new Solicitacao("REQ004", "Suporte técnico", "2024-08-20 12:00"),
        new Solicitacao("REQ005", "Troca de equipamento", "2024-08-20 12:30"),
        new Solicitacao("REQ006", "Consulta de garantia", "2024-08-20 13:00"),
        new Solicitacao("REQ007", "Reparo de impressora", "2024-08-20 13:30"),
        new Solicitacao("REQ008", "Configuração de rede", "2024-08-20 14:00"),
        new Solicitacao("REQ009", "Restauração de dados", "2024-08-20 14:30"),
        new Solicitacao("REQ010", "Consulta técnica", "2024-08-20 15:00")
    };
    
    for (Solicitacao solicitacao : solicitacoes) {
        pilha.inserir(solicitacao);
    }

    //----------------------------FILA-----------------------------------//
    Minha_fila fila = new Minha_fila();
    Cliente[] clientes = {
        new Cliente("CLI001", "Maria Silva", "Dúvida sobre produto"),
        new Cliente("CLI002", "João Souza", "Reclamação de serviço"),
        new Cliente("CLI003", "Ana Costa", "Solicitação de reembolso"),
        new Cliente("CLI004", "Pedro Alves", "Informações de entrega"),
        new Cliente("CLI005", "Carla Dias", "Agendamento de visita"),
        new Cliente("CLI006", "Lucas Martins", "Alteração de pedido"),
        new Cliente("CLI007", "Patrícia Rocha", "Cancelamento de contrato"),
        new Cliente("CLI008", "Rafael Lima", "Renovação de assinatura"),
        new Cliente("CLI009", "Fernanda Gomes", "Suporte para instalação"),
        new Cliente("CLI010", "Carlos Eduardo", "Pedido de orçamento")
    };

    for (Cliente cliente : clientes) {
        fila.inserir(cliente);
    }
            Scanner scanner = new Scanner(System.in);
        int choice;

        do {
            System.out.println("-----------------------------------------------------------------");
            System.out.println("Ola! O que voce deseja fazer?");
            System.out.println("--------------------------- FILA --------------------------------");
            System.out.println("1 - adicionar um item a fila");
            System.out.println("2 - remover primeiro da fila");
            System.out.println("3 - Imprimir fila");
            System.out.println("4 - Remover elemento com posicao n");
            System.out.println("5 - remover id");
            System.out.println("----------------------------PILHA-----------------------------");
            System.out.println("6 - adicionar um item a pilha");
            System.out.println("7 - remover primeiro da pilha");
            System.out.println("8 - Imprimir pilha");
            System.out.println("9 - Remover elemento com posicao n");
            System.out.println("10 - remover id");
            System.out.println("-----------------------------------------------------------------");
            System.out.print("0 - sair: ");
            

            while (!scanner.hasNextInt()) {
                System.out.println("Opcao invalida. Tente novamente.");
                scanner.next();
                System.out.print("Escolha uma opcao: ");
            }
            
            choice = scanner.nextInt();
            scanner.nextLine(); // Consome a nova linha

            switch (choice) {
                case 1:
                    System.out.println("Digite o ID do cliente:");
                    String id = scanner.nextLine();
            
                    System.out.println("Digite o nome do cliente:");
                    String nome = scanner.nextLine();
            
                    System.out.println("Digite a descrição do cliente:");
                    String descricao = scanner.nextLine();
                    Cliente novoCliente = new Cliente(id, nome, descricao);
                    fila.inserir(novoCliente);
                    break;
                case 2:
                    fila.remove_primeiro_fila();
                    break;
                case 3:
                    fila.imprime_lista();
                    break;
                case 4:
                    System.out.print("Digite a posicao do elemento a ser removido: ");
                    while (!scanner.hasNextInt()) {
                        System.out.println("Entrada invalida. Tente novamente.");
                        scanner.next();
                        System.out.print("Digite a posicao do elemento a ser removido: ");
                    }
                    int posFila = scanner.nextInt();
                    scanner.nextLine();
                    fila.remove_elemento_n(posFila);
                    break;
                case 5:
                    System.out.print("Digite o id do elemento a ser removido: ");
                    String idFila = scanner.nextLine();
                    fila.remove_id(idFila);
                    break;
                case 6:
                    System.out.println("Digite o ID da solicitacao:");
                    String id2 = scanner.nextLine();
            
                    System.out.println("Digite a descricao da solicitacao:");
                    String descricao2 = scanner.nextLine();
            
                    System.out.println("Digite a data da solicitacao:");
                    String data = scanner.nextLine();
                    Solicitacao novaSolicitacao = new Solicitacao(id2, descricao2, data);
                    pilha.inserir(novaSolicitacao);
                    break;
                case 7:
                    pilha.remove_primeiro_pilha();
                    break;
                case 8:
                    pilha.imprime_lista();
                    break;
                case 9:
                    System.out.print("Digite a posicao do elemento a ser removido: ");
                    while (!scanner.hasNextInt()) {
                        System.out.println("Entrada invalida. Tente novamente.");
                        scanner.next();
                        System.out.print("Digite a posicao do elemento a ser removido: ");
                    }
                    int posPilha = scanner.nextInt();
                    scanner.nextLine();
                    pilha.remove_elemento_n(posPilha);
                    break;
                case 10:
                    System.out.print("Digite o id do elemento a ser removido: ");
                    String idPilha = scanner.nextLine();
                    pilha.remove_id(idPilha);
                    break;
                case 0:
                    System.exit(0);
                default:
                    System.out.println("Opcao invalida. Tente novamente.");
            }
        } while (choice != 0);

        scanner.close();

  }
}

class No {
    Solicitacao valor;
    No proximo;
    No (Solicitacao valor){
        this.valor = valor;
        this.proximo = null;
    }
}

class No_fila {
    Cliente valor;
    No_fila proximo;
    No_fila (Cliente valor){
        this.valor = valor;
        this.proximo = null;
    }
}

class Minha_pilha {
    No cabeca;
    Minha_pilha (){
        this.cabeca = null;
    }
    void inserir (Solicitacao info){
        No novoNo = new No(info);
        if(cabeca == null){
            this.cabeca = novoNo;
        }
        else{
            No temp = this.cabeca;
            while(temp.proximo != null){
                temp = temp.proximo;
            }
            temp.proximo = novoNo;
        }
    }
    void remove_primeiro_pilha(){
        if(this.cabeca == null){
            System.out.println("Nao ha elementos na lista.");
        } else if (this.cabeca.proximo == null) {
            this.cabeca = null;
        } else {
            No temp = this.cabeca;
            while(temp.proximo.proximo != null){
                temp = temp.proximo;
            }
            temp.proximo = null;
        }
    }
    void remove_elemento_n (int n){
        if(n < 0){
            System.out.println("valor de n invalido");
            return;
        }
        else{
            No x = this.cabeca;
            No anterior = null;
            int cont = 0;
            while(x != null && cont < n){
                anterior = x;
                x = x.proximo;
                cont = cont + 1;
            }
            if(x == null){
                System.out.println("posicao nao encontrada");
                return;
            }
            if(anterior == null){
                this.cabeca = x.proximo;
            }
            else {
                anterior.proximo = x.proximo;
            }
        }
    }
    void imprime_lista (){
        No i = this.cabeca;
        while(i != null){
            System.out.println("ID: " + i.valor.id + ", Desc: " + i.valor.desc + ", Data: " + i.valor.data);
            i = i.proximo;
        }
    }
    
    int acha_indice_id (String id){
        No k = this.cabeca;
        int i = 0;
        while(k != null){
            if(k.valor.id.equals(id)){
                return i;
            } else {
                k = k.proximo;
                i = i+1;
            }
        }
        return -1;
    }
    
    void remove_id (String id){
        int i = this.acha_indice_id (id);
        if(i == -1){
            System.out.println("Id nao encontrado");
        } else {
        this.remove_elemento_n(i);
        }
    }
    
}

class Minha_fila {
    No_fila cabeca;
    Minha_fila (){
        this.cabeca = null;
    }
    void inserir (Cliente info){
        No_fila novoNo = new No_fila(info);
        if(cabeca == null){
            this.cabeca = novoNo;
        }
        else{
            No_fila temp = this.cabeca;
            while(temp.proximo != null){
                temp = temp.proximo;
            }
            temp.proximo = novoNo;
        }
    }
    void remove_primeiro_fila(){
        if(this.cabeca == null){
            System.out.println("Nao ha elementos na lista.");
        } else if (this.cabeca.proximo == null) {
            this.cabeca = null;
        } else {
            this.cabeca = this.cabeca.proximo;
        }
    }
    void remove_elemento_n (int n){
        if(n < 0){
            System.out.println("valor de n invalido");
            return;
        }
        else{
            No_fila x = this.cabeca;
            No_fila anterior = null;
            int cont = 0;
            while(x != null && cont < n){
                anterior = x;
                x = x.proximo;
                cont = cont + 1;
            }
            if(x == null){
                System.out.println("posicao nao encontrada.!");
                return;
            }
            if(anterior == null){
                this.cabeca = x.proximo;
            }
            else {
                anterior.proximo = x.proximo;
            }
        }
    }
    void imprime_lista (){
        No_fila i = this.cabeca;
        while(i != null){
            System.out.println("ID: " + i.valor.id + ", Nome: " + i.valor.nome + ", Motivo: " + i.valor.motivo);
            i = i.proximo;
        }
    }
    
    int acha_indice_id (String id){
        No_fila k = this.cabeca;
        int i = 0;
        while(k != null){
            if(k.valor.id.equals(id)){
                return i;
            } else {
                k = k.proximo;
                i = i+1;
            }
        }
        return -1;
    }
    
    void remove_id (String id){
        int i = this.acha_indice_id (id);
        if(i == -1){
            System.out.println("Id nao encontrado");
        } else {
        this.remove_elemento_n(i);
        }
    }
}



class Cliente {
    String id;
    String nome;
    String motivo;
    Cliente(String id, String nome, String motivo){
        this.id = id;
        this.nome = nome;
        this.motivo = motivo;
    }
}


class Solicitacao {
    String id;
    String desc;
    String data;
    Solicitacao(String id, String desc, String data){
        this.id = id;
        this.desc = desc;
        this.data = data;
    }
}